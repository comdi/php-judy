<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<phpdoc:classref xml:id="class.judy" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>The Judy class</title>
 <titleabbrev>Judy</titleabbrev>

 <partintro>

<!-- {{{ Judy intro -->
  <section xml:id="judy.intro">
   &reftitle.intro;
   <para>
<acronym>PHP</acronym> Judy is a <acronym>PECL</acronym> extension for the <link xlink:href="http://judy.sourceforge.net">Judy C library</link> implementing dynamic spare arrays.
   </para>
   <para>
A Judy array is a complex but very fast associative array data structure for storing and looking up values using integer or string keys. Unlike normal arrays, Judy arrays may be sparse; that is, they may have large ranges of unassigned indices.
   </para>
   <para>
A Judy array consumes memory only when populated yet can grow to take advantage of all available memory.  Judy's key benefits are:  scalability, performance, memory efficiency, and ease of use. Judy arrays are designed to grow without tuning into the peta-element range, scaling near O(log-base-256) -- 1 more RAM access at 256 X population.
   </para>
  </section>
<!-- }}} -->

  <section xml:id="judy.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>Judy</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>Judy</classname>
     </ooclass>
     
     <oointerface>
      <interfacename>ArrayAccess</interfacename>
      <interfacename>Iterator</interfacename>
     </oointerface>
    </classsynopsisinfo>
<!-- }}} -->
    <classsynopsisinfo role="comment">Constants</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="judy.constants.bitset">Judy::BITSET</varname>
     <initializer>1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="judy.constants.int-to-int">Judy::INT_TO_INT</varname>
     <initializer>2</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="judy.constants.int-to-mixed">Judy::INT_TO_MIXED</varname>
     <initializer>3</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="judy.constants.string-to-int">Judy::STRING_TO_INT</varname>
     <initializer>4</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="judy.constants.string-to-mixed">Judy::STRING_TO_MIXED</varname>
     <initializer>5</initializer>
    </fieldsynopsis>
    
    <classsynopsisinfo role="comment">Methods</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.judy')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
<!-- }}} -->

  </section>
  
<!-- {{{ Judy constants -->
  <section xml:id="judy.constants">
   &reftitle.constants;
   <section xml:id="judy.constants.types">
    <title>Judy Node Types</title>
    <variablelist>

     <varlistentry xml:id="judy.constants.bitset">
      <term><constant>Judy::BITSET</constant></term>
      <listitem>
       <para>Define the Judy Array as a Bitset with keys as Integer and Values as a Boolean</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="judy.constants.int-to-int">
      <term><constant>Judy::INT_TO_INT</constant></term>
      <listitem>
       <para>Define the Judy Array with key/values as Integer, and Integer only.</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="judy.constants.int-to-mixed">
      <term><constant>Judy::INT_TO_MIXED</constant></term>
      <listitem>
       <para>Define the Judy Array with keys as Integer and Values of any type.</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="judy.constants.string-to-int">
      <term><constant>Judy::STRING_TO_INT</constant></term>
      <listitem>
       <para>Define the Judy Array with keys as a String and Values as Integer, and Integer only.</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="judy.constants.string-to-mixed">
      <term><constant>Judy::STRING_TO_MIXED</constant></term>
      <listitem>
       <para>Define the Judy Array with keys as a String and Values of any type.</para>
      </listitem>
     </varlistentry>

    </variablelist>
   </section>
  </section>
<!-- }}} -->


 </partintro>

 &reference.judy.entities.judy;

</phpdoc:classref>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
